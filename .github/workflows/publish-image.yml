name: Publish Docker image
on:
  push:
    branches:
      - main
      - upgrade-langs
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
    paths:
      - Dockerfile
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  build-and-push-image:
    name: Push Docker image to GitHub Container Registry
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            suffix: amd64
            runner: X64
          - platform: linux/arm64
            suffix: arm64
            runner: ARM64
    timeout-minutes: 120
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: suffix=-${{ matrix.suffix }},onlatest=true
          tags: |
            type=ref,event=branch
            type=match,pattern=[\d]+\.[\d]+\.[\d]+,group=0
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          platforms: ${{ matrix.platform }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  create-tags:
    name: Prepare Multi-platform Image Meta data
    runs-on: ubuntu-latest
    needs: build-and-push-image
    outputs:
      meta: ${{ steps.meta.outputs.json }}
    steps:
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=match,pattern=[\d]+\.[\d]+\.[\d]+,group=0
  create-manifest:
    name: Create and Push Multi Platform manifest
    runs-on: ubuntu-latest
    needs: create-tags
    strategy:
      matrix: 
        tags: ${{ fromJSON(needs.create-tags.outputs.meta).tags }}
    steps:
      - uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create manifest
        run: docker manifest create ${{ matrix.tags }} ${{ matrix.tags }}-amd64 ${{ matrix.tags }}-arm64
      - name: Push manifest
        run: docker manifest push ${{ matrix.tags }}
